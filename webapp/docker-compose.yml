version: '3'

services:
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pizza-web
    restart: unless-stopped
    volumes:
      - ./uploads:/uploads
      - ./logs:/log/prod
      #- ./imgapp:/root/uploads
      #- ./uploads:/root/uploads
    ports:
      - 8080:8090
    networks:
      - pizza-net


  restapi:
    build:
      context: ../pizzaprest
      dockerfile: Dockerfile
    container_name: pizza-api
    restart: unless-stopped
    volumes:
      - ./logs:/log/rest
    ports:
      - 8090:8090
    networks:
      - pizza-net


  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#    image: nginx:1.13
#    image: nginx:stable-alpine
    container_name: pizza-nginx
    restart: always
    ports:
      - 80:80
      - 443:443
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      #- ./nginx/vhost.d:/etc/nginx/vhost.d:ro
      #- ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - webapp
      - restapi
    networks:
      - pizza-net

  postgres:
    container_name: postgres
    image: postgres
    env_file: .env
    ports:
      - 5433:5432
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./db_dump/pizza_db.sql:/docker-entrypoint-initdb.d/pizza_db.sql
    networks:
      - pizza-net
    restart: unless-stopped

networks:
  pizza-net:
    driver: bridge

